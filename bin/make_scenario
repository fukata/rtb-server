#!/usr/bin/env ruby

require 'optparse'
require 'addressable/uri'

########################################
# options 
########################################

opts = {
  :out          => nil,
  :scenario_num => 0,
  :dsp_num      => 0,
  :bid_rate     => 50,
  :target_host  => 'localhost', 
  :target_port  => 80,
  :target_dsp   => nil,
}
op = OptionParser.new
op.on('-o', '--out PATH')                   {|v| opts[:out] = v }
op.on('-n', '--num TOTAL SCENARIO NUM')     {|v| opts[:scenario_num] = v.to_i }
op.on('-d', '--dsp TOTAL DSP NUM')          {|v| opts[:dsp_num] = v.to_i }
op.on('-r', '--rate BID RATE')              {|v| opts[:bid_rate] = v.to_i }
op.on('-h', '--target_host TARGET HOST')    {|v| opts[:target_host] = v }
op.on('-p', '--target_port TARGET PORT')    {|v| opts[:target_port] = v.to_i }
op.on('-td', '--target_dsp TARGET DSP')     {|v| opts[:target_dsp] = v.to_i }

begin
  op.parse!(ARGV)

  if ARGV.length != 0
    usage nil
  end
rescue
  usage $!.to_s
end

# validate parameters
if opts[:scenario_num] < 1
  puts "num is require greater than 0."
  exit 1
end

if opts[:dsp_num] < 0 and opts[:target_dsp] 
  puts "dsp or target_dsp is require greater equal than 0."
  exit 1
end

########################################
# functions 
########################################

def generate_id()
  chars = ("a".."z").to_a + ("A".."Z").to_a + (0..9).to_a
  Array.new(64){chars[rand(chars.size)]}.join
end

def make_scenario(opts)
  scenario = {}

  scenario["id"] = generate_id()
  if opts[:target_dsp]
    scenario["t"] = rand(120)
    bid = rand(100) < opts[:bid_rate]
    scenario["s"] = bid ? 1 : 0
    # cpm per bid max 1000 yen 
    scenario["p"] = bid ? rand(1000) * 1000 : 0 
  else
    scenario["dsp"] = opts[:dsp_num] 
    opts[:dsp_num].times do |n|
      scenario["d#{n}_t"] = rand(130)
      bid = rand(100) < opts[:bid_rate]
      scenario["d#{n}_s"] = bid ? 1 : 0
      # cpm per bid max 1000 yen 
      scenario["d#{n}_p"] = bid ? rand(1000) * 1000 : 0 
    end
  end

  scenario
end

########################################
# main
########################################
File.open(opts[:out], 'w') do |f|
  uri = Addressable::URI.new
  target_port = opts[:target_port] == 80 ? '' : ":#{opts[:target_port]}"
  opts[:scenario_num].times do |i|
    scenario = make_scenario(opts)
    uri.query_values = scenario 
    f.puts "http://#{opts[:target_host]}#{target_port}/ad?#{uri.query}"
  end
end
